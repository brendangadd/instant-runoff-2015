{"version":3,"sources":["main.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","createNextRankDistribution","districtResult","nextRankDistribution","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","keys","NEXT_RANK_DISTRIBUTION","Symbol","iterator","next","done","err","blankDistribution","party","Party","BLOC","probability","bloc","CONSERVATIVE","conservative","GREEN","green","LIBERAL","liberal","NDP","ndp","updateProgress","progress","progressBar","document","querySelector","percentage","roundedPercentage","Math","round","setAttribute","style","width","textContent","updateSeatCounts","seats","addResultTableRow","electionResult","tr","createElement","tdDistrict","tdPlurality","tdWinner","districtName","plurality","winner","appendChild","simpleBarChart","selector","labels","data","ctx","getContext","chart","Chart","Bar","datasets","scaleShowVerticalLines","colorChart","colors","i","length","bars","fillColor","strokeColor","update","_dataIndex","numDistricts","numElectionsCompleted","electionWorker","Worker","defaults","global","responsive","maintainAspectRatio","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","chartLabels","chartColors","fptpChart","irvChart","dataIndex","client","XMLHttpRequest","addEventListener","this","open","send","body","className","onload","districtResults","JSON","parse","response","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","postMessage","district","totalVotes","onmessage","event","hasOwnProperty","console","log"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\nlet numDistricts = 1;\nlet numElectionsCompleted = 0;\nlet seats = {};\n\nlet electionWorker = new Worker('election-worker.js');\n\nChart.defaults.global.responsive = true;\nChart.defaults.global.maintainAspectRatio = false;\nChart.defaults.global.scaleOverride = true;\nChart.defaults.global.scaleSteps = 10;\nChart.defaults.global.scaleStepWidth = 25;\nChart.defaults.global.scaleStartValue = 0;\nlet chartLabels = ['Bloc', 'Conservative', 'Green', 'Liberal', 'NDP'];\nlet chartColors = ['#09c', '#00e', '#0c0', '#a00', '#f90'];\n\nlet fptpChart = simpleBarChart('#chart-fptp', chartLabels, [10, 99, 1, 184, 44]);\ncolorChart(fptpChart, chartColors);\n\nlet irvChart = simpleBarChart('#chart-irv', chartLabels, [0, 0, 0, 0, 0]);\ncolorChart(irvChart, chartColors);\n\nlet dataIndex = {\n   [Party.BLOC]: 0,\n   [Party.CONSERVATIVE]: 1,\n   [Party.GREEN]: 2,\n   [Party.LIBERAL]: 3,\n   [Party.NDP]: 4\n};\n\nlet client = new XMLHttpRequest();\ndocument.querySelector('#start').addEventListener('click', function() {\n   this.setAttribute('disabled', 'disabled');\n   client.open('GET', 'resources/data.json');\n   client.send();\n   document.body.className = 'state-inelection';\n});\n\nclient.onload = function() {\n   let districtResults = JSON.parse(this.response);\n   numDistricts = districtResults.length;\n\n   for (let districtResult of districtResults) {\n      let nextRankDistribution = createNextRankDistribution(districtResult);\n      electionWorker.postMessage({\n         districtName: districtResult.district,\n         totalVotes: districtResult.totalVotes,\n         nextRankDistribution\n      });\n   }\n};\n\nelectionWorker.onmessage = function(event) {\n   let winner = event.data.winner;\n\n   if (!seats.hasOwnProperty(winner)) {\n      seats[winner] = 0;\n   }\n   seats[winner]++;\n\n   updateProgress(++numElectionsCompleted / numDistricts);\n   updateSeatCounts();\n   addResultTableRow(event.data);\n\n   irvChart.datasets[0].bars[dataIndex[event.data.winner]].value++\n   irvChart.update();\n\n   console.log(event.data.districtName, event.data.winner);\n};\n\nfunction createNextRankDistribution(districtResult) {\n   let nextRankDistribution = {};\n   for (let key of Object.keys(NEXT_RANK_DISTRIBUTION)) {\n      nextRankDistribution[key] = NEXT_RANK_DISTRIBUTION[key];\n   }\n   let blankDistribution = [\n      {party: Party.BLOC, probability: districtResult.bloc / 100},\n      {party: Party.CONSERVATIVE, probability: districtResult.conservative / 100},\n      {party: Party.GREEN, probability: districtResult.green / 100},\n      {party: Party.LIBERAL, probability: districtResult.liberal / 100},\n      {party: Party.NDP, probability: districtResult.ndp / 100}\n   ];\n   nextRankDistribution['BLANK'] = blankDistribution;\n\n   return nextRankDistribution;\n}\n\nfunction updateProgress(progress) {\n   let progressBar = document.querySelector('#progress');\n   let percentage = progress * 100;\n   let roundedPercentage = Math.round(percentage);\n   progressBar.setAttribute('aria-valuenow', roundedPercentage);\n   progressBar.style.width = percentage + '%';\n   progressBar.textContent = roundedPercentage + '%';\n}\n\nfunction updateSeatCounts() {\n   document.querySelector('#seat-count-bloc span').textContent = seats[Party.BLOC] || 0;\n   document.querySelector('#seat-count-conservative span').textContent = seats[Party.CONSERVATIVE] || 0;\n   document.querySelector('#seat-count-green span').textContent = seats[Party.GREEN] || 0;\n   document.querySelector('#seat-count-liberal span').textContent = seats[Party.LIBERAL] || 0;\n   document.querySelector('#seat-count-ndp span').textContent = seats[Party.NDP] || 0;\n}\n\nfunction addResultTableRow(electionResult) {\n   let tr = document.createElement('tr');\n   let tdDistrict = document.createElement('td');\n   let tdPlurality = document.createElement('td');\n   let tdWinner = document.createElement('td');\n\n   tdDistrict.textContent = electionResult.districtName;\n   tdPlurality.textContent = electionResult.plurality;\n   tdWinner.textContent = electionResult.winner;\n\n   tr.appendChild(tdDistrict);\n   tr.appendChild(tdPlurality);\n   tr.appendChild(tdWinner);\n\n   document.querySelector('#result-table tbody').appendChild(tr);\n}\n\nfunction simpleBarChart(selector, labels, data) {\n   let ctx = document.querySelector(selector).getContext('2d');\n   let chart = new Chart(ctx).Bar({\n         labels: labels,\n         datasets: [{data}]\n      }, {scaleShowVerticalLines: false})\n   ;\n   return chart;\n}\n\nfunction colorChart(chart, colors) {\n   for (let i = 0; i < colors.length; i++) {\n      chart.datasets[0].bars[i].fillColor = colors[i];\n      chart.datasets[0].bars[i].strokeColor = colors[i];\n   }\n   chart.update();\n}\n"],"sourceRoot":"/source/"}